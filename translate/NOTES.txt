TODO
====
- implement method to parse 2nd-type "always"
- modify: pddl/conditions.py to parse other modalities: sometime-before, sometime-after, most-once
- separate between 1st & 2nd types of constraint

WORKING WITH FILES
==================
- translate.py
- normalize.py
- sas_tasks.py
- instantiate.py
- pddl_to_prolog.py
- pddl/pddl_file.py
- pddl/conditions.py
- pddl/tasks.py
- pddl/actions.py
- pddl/effects.py

Constraint types
================
1. 1st-type always: (forall (...) (always (...)))
2. 2nd-type always: (always (...))
3. sometime

CHANGELOG
=========
22-11-2012
- enable 2nd-type sometime modality
- enable 1st-type always modality of trajectory constraints
  - add "always-variable" and "always-verifier"
  - given the planning task with 1st-type always, the solution plan can be produced correctly

21-11-2012
- parse & normalize 1st-type always: (forall (...) (always (...)))
- add 1st-type always in goal condition

DONE
====
- find-out how "goal" condition is compiled, then use the same method to compile "1st-type always"
  see: normalize() in "normalize.py"
- create "verifier_operator" in translate_task() of "translate.py"
- implement method to compile 1st-type "always"
- implement method to compile 2nd-type "sometime"
