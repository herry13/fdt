Problem: p03-43.pddl
1. Running translator
Second argument is a file name: use two translator arguments.
Parsing... Atom at(rover1, waypoint2)
Atom have_rock_analysis(rover0, waypoint0)
Atom have_rock_analysis(rover0, waypoint0)
Atom have_soil_analysis(rover1, waypoint2)
Atom have_rock_analysis(rover0, waypoint0)
[0.010s CPU, 0.012s wall-clock]
Instantiating...
Normalizing task... [0.010s CPU, 0.014s wall-clock]
Generating Datalog program... [0.020s CPU, 0.019s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.050s CPU, 0.052s wall-clock]
Preparing model... [0.060s CPU, 0.048s wall-clock]
Generated 923 rules.
Computing model... [0.030s CPU, 0.038s wall-clock]
288 relevant atoms
428 auxiliary atoms
716 final queue length
1521 total queue pushes
Completing instantiation... Goal: <pddl.conditions.Conjunction object at 0x7fea2e245510>
[0.030s CPU, 0.033s wall-clock]
Instantiating: [0.210s CPU, 0.207s wall-clock]
Computing fact groups...
Finding invariants...
31 initial candidates
Finding invariants: [0.010s CPU, 0.016s wall-clock]
Checking invariant weight... [0.000s CPU, 0.000s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
32 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.020s CPU, 0.019s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Compute negative axioms...
Compute axiom layers...
Processing axioms: [0.000s CPU, 0.002s wall-clock]
Translate goal conditions...
Translate strips operators...
Translate strips axioms...
Create SAS task...
Translating task: [0.460s CPU, 0.468s wall-clock]
1878 implied effects removed
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
750 operators removed
8 propositions removed
Detecting unreachable propositions: [0.050s CPU, 0.043s wall-clock]
Translator variables: 40
Translator derived variables: 0
Translator facts: 85
Translator mutex groups: 8
Translator total mutex groups size: 21
Translator operators: 316
Translator task size: 6870
Translator peak memory: 135912 KB
Writing output... [0.050s CPU, 0.058s wall-clock]
Done! [0.800s CPU, 0.812s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
33 variables of 40 necessary
0 of 8 mutex groups necessary.
316 of 316 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 71
Preprocessor derived variables: 0
Preprocessor task size: 6801
Writing output...
done


3. Running search
Dispatcher selected state size 1.
This is a unit task.
Simplifying transitions... done!
Initializing heuristic cache... done!
Conducting lazy best first search, (real) bound = 2147483647
Initializing causal graph heuristic...
Best heuristic value: 23 [g=0, 1 evaluated, 0 expanded, t=0.03s]
Best heuristic value: 19 [g=1, 2 evaluated, 1 expanded, t=0.03s]
Best heuristic value: 16 [g=3, 9 evaluated, 8 expanded, t=0.03s]
Best heuristic value: 15 [g=4, 15 evaluated, 14 expanded, t=0.03s]
Best heuristic value: 10 [g=5, 16 evaluated, 15 expanded, t=0.03s]
Best heuristic value: 8 [g=7, 24 evaluated, 23 expanded, t=0.03s]
Best heuristic value: 7 [g=11, 55 evaluated, 53 expanded, t=0.03s]
Best heuristic value: 6 [g=13, 63 evaluated, 61 expanded, t=0.03s]
Best heuristic value: 5 [g=17, 40018 evaluated, 36944 expanded, t=0.57s]
Best heuristic value: 3 [g=19, 40028 evaluated, 36954 expanded, t=0.58s]
Best heuristic value: 2 [g=21, 40036 evaluated, 36962 expanded, t=0.58s]
Best heuristic value: 1 [g=31, 113916 evaluated, 110842 expanded, t=1.92s]
Solution found!
Actual search time: 1.89s [t=1.92s]
1: navigate rover1 waypoint3 waypoint0 (1)
2: navigate rover1 waypoint0 waypoint1 (1)
3: sample_rock rover0 rover0store waypoint1 (1)
4: calibrate rover1 camera1 objective0 waypoint1 (1)
5: take_image rover1 waypoint1 objective0 camera1 colour (1)
6: communicate_image_data rover1 general objective0 colour waypoint1 waypoint0 (1)
7: navigate rover1 waypoint1 waypoint0 (1)
8: navigate rover1 waypoint0 waypoint3 (1)
9: navigate rover1 waypoint3 waypoint2 (1)
10: sample_soil rover1 rover1store waypoint2 (1)
11: communicate_soil_data rover1 general waypoint2 waypoint2 waypoint0 (1)
12: navigate rover0 waypoint1 waypoint0 (1)
13: drop rover0 rover0store (1)
14: sample_rock rover0 rover0store waypoint0 (1)
15: navigate rover0 waypoint0 waypoint1 (1)
16: communicate_rock_data rover0 general waypoint0 waypoint1 waypoint0 (1)
Plan length: 16 step(s).
Plan cost: 16
Initial state h value: 23.
Expanded 110849 state(s).
Reopened 0 state(s).
Evaluated 113923 state(s).
Evaluations: 113923
Generated 1242796 state(s).
Dead ends: 3073 state(s).
Search time: 1.89s
Total time: 1.92s
Peak memory: 45156 KB


--- planning time ---
p03-43.pddl: 2.82
--- validation ---
Bad problem file!
-- plan ---
1: (navigate rover1 waypoint3 waypoint0)
2: (navigate rover1 waypoint0 waypoint1)
3: (sample_rock rover0 rover0store waypoint1)
4: (calibrate rover1 camera1 objective0 waypoint1)
5: (take_image rover1 waypoint1 objective0 camera1 colour)
6: (communicate_image_data rover1 general objective0 colour waypoint1 waypoint0)
7: (navigate rover1 waypoint1 waypoint0)
8: (navigate rover1 waypoint0 waypoint3)
9: (navigate rover1 waypoint3 waypoint2)
10: (sample_soil rover1 rover1store waypoint2)
11: (communicate_soil_data rover1 general waypoint2 waypoint2 waypoint0)
12: (navigate rover0 waypoint1 waypoint0)
13: (drop rover0 rover0store)
14: (sample_rock rover0 rover0store waypoint0)
15: (navigate rover0 waypoint0 waypoint1)
16: (communicate_rock_data rover0 general waypoint0 waypoint1 waypoint0)
