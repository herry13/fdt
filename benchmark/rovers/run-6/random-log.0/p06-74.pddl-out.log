Problem: p06-74.pddl
1. Running translator
Second argument is a file name: use two translator arguments.
Parsing... Atom at(rover0, waypoint0)
Atom at(rover0, waypoint2)
Atom have_soil_analysis(rover1, waypoint1)
Atom have_soil_analysis(rover1, waypoint2)
Atom at(rover1, waypoint5)
Atom have_soil_analysis(rover1, waypoint4)
Atom have_rock_analysis(rover0, waypoint3)
[0.000s CPU, 0.009s wall-clock]
Instantiating...
Normalizing task... [0.160s CPU, 0.163s wall-clock]
Generating Datalog program... [0.230s CPU, 0.226s wall-clock]
Normalizing Datalog program...
Trivial rules: Converted to facts.
Normalizing Datalog program: [0.530s CPU, 0.522s wall-clock]
Preparing model... [0.700s CPU, 0.710s wall-clock]
Generated 19541 rules.
Computing model... [0.280s CPU, 0.275s wall-clock]
1410 relevant atoms
863 auxiliary atoms
2273 final queue length
20827 total queue pushes
Completing instantiation... Goal: <pddl.conditions.Conjunction object at 0x7f285fea4fd0>
[0.460s CPU, 0.463s wall-clock]
Instantiating: [2.420s CPU, 2.420s wall-clock]
Computing fact groups...
Finding invariants...
31 initial candidates
Finding invariants: [0.030s CPU, 0.029s wall-clock]
Checking invariant weight... [0.000s CPU, 0.001s wall-clock]
Instantiating groups... [0.000s CPU, 0.001s wall-clock]
Collecting mutex groups... [0.000s CPU, 0.000s wall-clock]
Choosing groups...
44 uncovered facts
Choosing groups: [0.000s CPU, 0.000s wall-clock]
Building translation key... [0.000s CPU, 0.000s wall-clock]
Computing fact groups: [0.030s CPU, 0.033s wall-clock]
Building STRIPS to SAS dictionary... [0.000s CPU, 0.000s wall-clock]
Building dictionary for full mutex groups... [0.000s CPU, 0.000s wall-clock]
Building mutex information...
Building mutex information: [0.000s CPU, 0.000s wall-clock]
Translating task...
Processing axioms...
Simplifying axioms... [0.000s CPU, 0.000s wall-clock]
Compute negative axioms...
Compute axiom layers...
Processing axioms: [0.060s CPU, 0.058s wall-clock]
Translate goal conditions...
Translate strips operators...
Translate strips axioms...
Create SAS task...
Translating task: [76.480s CPU, 76.693s wall-clock]
274752 implied effects removed
0 effect conditions simplified
0 implied preconditions added
Detecting unreachable propositions...
95448 operators removed
13 propositions removed
Detecting unreachable propositions: [7.800s CPU, 7.811s wall-clock]
Translator variables: 57
Translator derived variables: 0
Translator facts: 122
Translator mutex groups: 13
Translator total mutex groups size: 34
Translator operators: 15538
Translator task size: 854894
Translator peak memory: 997624 KB
Writing output... [3.030s CPU, 3.153s wall-clock]
Done! [89.890s CPU, 90.249s wall-clock]

2. Running preprocessor
Building causal graph...
The causal graph is not acyclic.
52 variables of 57 necessary
0 of 13 mutex groups necessary.
15538 of 15538 operators necessary.
0 of 0 axiom rules necessary.
Building domain transition graphs...
solveable in poly time 0
Building successor generator...
Preprocessor facts: 112
Preprocessor derived variables: 0
Preprocessor task size: 854815
Writing output...
done


3. Running search
Dispatcher selected state size 1.
This is a unit task.
Simplifying transitions... done!
Initializing heuristic cache... done!
Conducting lazy best first search, (real) bound = 2147483647
Initializing causal graph heuristic...
Best heuristic value: 39 [g=0, 1 evaluated, 0 expanded, t=1.12s]
Best heuristic value: 28 [g=1, 2 evaluated, 1 expanded, t=1.12s]
Best heuristic value: 26 [g=3, 12 evaluated, 10 expanded, t=1.13s]
Best heuristic value: 23 [g=5, 24 evaluated, 21 expanded, t=1.14s]
Best heuristic value: 22 [g=7, 35 evaluated, 31 expanded, t=1.15s]
Best heuristic value: 20 [g=11, 59 evaluated, 53 expanded, t=1.17s]
Best heuristic value: 19 [g=15, 84 evaluated, 76 expanded, t=1.18s]
Best heuristic value: 18 [g=17, 96 evaluated, 87 expanded, t=1.19s]
Best heuristic value: 17 [g=25, 270 evaluated, 245 expanded, t=1.29s]
Best heuristic value: 16 [g=27, 281 evaluated, 256 expanded, t=1.29s]
Best heuristic value: 15 [g=33, 379 evaluated, 353 expanded, t=1.32s]
Best heuristic value: 14 [g=35, 390 evaluated, 364 expanded, t=1.32s]
Best heuristic value: 13 [g=27, 23079 evaluated, 21942 expanded, t=9.34s]
Best heuristic value: 12 [g=29, 23093 evaluated, 21956 expanded, t=9.34s]
Best heuristic value: 11 [g=35, 23221 evaluated, 22084 expanded, t=9.36s]
Best heuristic value: 10 [g=37, 23230 evaluated, 22093 expanded, t=9.36s]
Best heuristic value: 9 [g=43, 23383 evaluated, 22246 expanded, t=9.38s]
Best heuristic value: 8 [g=45, 23393 evaluated, 22256 expanded, t=9.38s]
Best heuristic value: 7 [g=51, 23571 evaluated, 22434 expanded, t=9.4s]
Best heuristic value: 6 [g=53, 23580 evaluated, 22443 expanded, t=9.4s]
Best heuristic value: 5 [g=59, 23728 evaluated, 22591 expanded, t=9.41s]
Best heuristic value: 4 [g=61, 23736 evaluated, 22599 expanded, t=9.41s]
Best heuristic value: 3 [g=71, 24511 evaluated, 23374 expanded, t=9.48s]
Best heuristic value: 2 [g=73, 24522 evaluated, 23385 expanded, t=9.48s]
Best heuristic value: 1 [g=77, 83444 evaluated, 82307 expanded, t=14.93s]
Solution found!
Actual search time: 13.81s [t=14.93s]
1: calibrate rover1 camera2 objective0 waypoint4 (1)
2: take_image rover1 waypoint4 objective0 camera2 colour (1)
3: communicate_image_data rover1 general objective0 colour waypoint4 waypoint3 (1)
4: calibrate rover0 camera0 objective0 waypoint1 (1)
5: take_image rover0 waypoint1 objective0 camera0 colour (1)
6: calibrate rover0 camera1 objective1 waypoint1 (1)
7: take_image rover0 waypoint1 objective1 camera1 low_res (1)
8: communicate_image_data rover0 general objective1 low_res waypoint1 waypoint3 (1)
9: navigate rover0 waypoint1 waypoint0 (1)
10: sample_rock rover0 rover0store waypoint0 (1)
11: communicate_rock_data rover0 general waypoint0 waypoint0 waypoint3 (1)
12: navigate rover1 waypoint4 waypoint1 (1)
13: sample_soil rover1 rover1store waypoint1 (1)
14: communicate_soil_data rover1 general waypoint1 waypoint1 waypoint3 (1)
15: navigate rover0 waypoint0 waypoint2 (1)
16: drop rover0 rover0store (1)
17: sample_rock rover0 rover0store waypoint2 (1)
18: communicate_rock_data rover0 general waypoint2 waypoint2 waypoint3 (1)
19: navigate rover1 waypoint1 waypoint4 (1)
20: drop rover1 rover1store (1)
21: sample_soil rover1 rover1store waypoint4 (1)
22: communicate_soil_data rover1 general waypoint4 waypoint4 waypoint3 (1)
23: navigate rover1 waypoint4 waypoint5 (1)
24: drop rover1 rover1store (1)
25: sample_soil rover1 rover1store waypoint5 (1)
26: communicate_soil_data rover1 general waypoint5 waypoint5 waypoint3 (1)
27: navigate rover0 waypoint2 waypoint0 (1)
28: drop rover0 rover0store (1)
29: navigate rover0 waypoint0 waypoint3 (1)
30: sample_rock rover0 rover0store waypoint3 (1)
31: navigate rover0 waypoint3 waypoint0 (1)
32: communicate_rock_data rover0 general waypoint3 waypoint0 waypoint3 (1)
33: calibrate rover0 camera0 objective0 waypoint0 (1)
34: take_image rover0 waypoint0 objective0 camera0 low_res (1)
35: communicate_image_data rover0 general objective0 low_res waypoint0 waypoint3 (1)
36: navigate rover1 waypoint5 waypoint2 (1)
37: drop rover1 rover1store (1)
38: sample_soil rover1 rover1store waypoint2 (1)
39: communicate_soil_data rover1 general waypoint2 waypoint2 waypoint3 (1)
Plan length: 39 step(s).
Plan cost: 39
Initial state h value: 39.
Expanded 82319 state(s).
Reopened 0 state(s).
Evaluated 83456 state(s).
Evaluations: 83456
Generated 2316410 state(s).
Dead ends: 1136 state(s).
Search time: 13.81s
Total time: 14.93s
Peak memory: 67112 KB


--- planning time ---
p06-74.pddl: 120.30
--- validation ---
Bad problem file!
-- plan ---
1: (calibrate rover1 camera2 objective0 waypoint4)
2: (take_image rover1 waypoint4 objective0 camera2 colour)
3: (communicate_image_data rover1 general objective0 colour waypoint4 waypoint3)
4: (calibrate rover0 camera0 objective0 waypoint1)
5: (take_image rover0 waypoint1 objective0 camera0 colour)
6: (calibrate rover0 camera1 objective1 waypoint1)
7: (take_image rover0 waypoint1 objective1 camera1 low_res)
8: (communicate_image_data rover0 general objective1 low_res waypoint1 waypoint3)
9: (navigate rover0 waypoint1 waypoint0)
10: (sample_rock rover0 rover0store waypoint0)
11: (communicate_rock_data rover0 general waypoint0 waypoint0 waypoint3)
12: (navigate rover1 waypoint4 waypoint1)
13: (sample_soil rover1 rover1store waypoint1)
14: (communicate_soil_data rover1 general waypoint1 waypoint1 waypoint3)
15: (navigate rover0 waypoint0 waypoint2)
16: (drop rover0 rover0store)
17: (sample_rock rover0 rover0store waypoint2)
18: (communicate_rock_data rover0 general waypoint2 waypoint2 waypoint3)
19: (navigate rover1 waypoint1 waypoint4)
20: (drop rover1 rover1store)
21: (sample_soil rover1 rover1store waypoint4)
22: (communicate_soil_data rover1 general waypoint4 waypoint4 waypoint3)
23: (navigate rover1 waypoint4 waypoint5)
24: (drop rover1 rover1store)
25: (sample_soil rover1 rover1store waypoint5)
26: (communicate_soil_data rover1 general waypoint5 waypoint5 waypoint3)
27: (navigate rover0 waypoint2 waypoint0)
28: (drop rover0 rover0store)
29: (navigate rover0 waypoint0 waypoint3)
30: (sample_rock rover0 rover0store waypoint3)
31: (navigate rover0 waypoint3 waypoint0)
32: (communicate_rock_data rover0 general waypoint3 waypoint0 waypoint3)
33: (calibrate rover0 camera0 objective0 waypoint0)
34: (take_image rover0 waypoint0 objective0 camera0 low_res)
35: (communicate_image_data rover0 general objective0 low_res waypoint0 waypoint3)
36: (navigate rover1 waypoint5 waypoint2)
37: (drop rover1 rover1store)
38: (sample_soil rover1 rover1store waypoint2)
39: (communicate_soil_data rover1 general waypoint2 waypoint2 waypoint3)
